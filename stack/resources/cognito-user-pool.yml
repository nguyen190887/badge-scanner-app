Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      # Generate a name based on the stage
      UserPoolName: ${self:custom.stage}-user-pool
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      # Generate an app client name based on the stage
      ClientName: ${self:custom.stage}-user-pool-client
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false
  CognitoGroupAdmin:
    Type: "AWS::Cognito::UserPoolGroup"
    Properties:
      GroupName: "Admin"
      Description: "Group for Admin"
      UserPoolId: !Ref CognitoUserPool
  CognitoGroupEditor:
    Type: "AWS::Cognito::UserPoolGroup"
    Properties:
      GroupName: "Editor"
      UserPoolId: !Ref CognitoUserPool
  CognitoGroupUser:
    Type: "AWS::Cognito::UserPoolGroup"
    Properties:
      GroupName: "User"
      UserPoolId: !Ref CognitoUserPool
# Print out the Id of the User Pool that is created
Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPool

  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient